{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","image","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACH,mCACVC,EAFa,uDACH,mCADG,cAEsDC,UACrEH,GAHe,sBAKAI,MAAMF,GALN,cAKbG,EALa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAACC,GACxB,OACI,sBAAKC,UAAU,2CAAf,UACI,qBAAKC,IAAKF,EAAMd,IAAKiB,IAAKH,EAAMJ,QAChC,4BAAII,EAAMJ,YCFTQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SACtB,ECFwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNzB,EAAQC,GAAUyB,MAAK,SAACC,GAAD,OACnBH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGlB,CAACrB,IAEGsB,EDb2BK,CAAa3B,GAAjCa,EAAd,EAAQN,KAAcc,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,yCAAd,SAAwDjB,IAEvDqB,GACG,oBAAGJ,UAAU,sCAAb,sBACc,OAIlB,qBAAKA,UAAU,YAAf,SACKJ,EAAOJ,KAAI,SAACO,GACT,OAAO,cAAC,EAAD,eAAgCA,GAAdA,EAAML,aEftCiB,EAAe,WACxB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BACKS,EAAWe,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCXlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b7b9c548.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories((categories) => [inputValue, ...categories]);\r\n            setInputValue(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const api_key = \"FAjJ0iHBqMpW1j0ILAdyLFPoLN1JtqNF\";\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${encodeURI(\r\n        category\r\n    )}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n    return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = (image) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={image.url} alt={image.title}></img>\r\n            <p>{image.title}</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInRight\">{category}</h3>\r\n\r\n            {loading && (\r\n                <p className=\"animate__animated animate__rotateIn\">\r\n                    Loading..{\" \"}\r\n                </p>\r\n            )}\r\n\r\n            <div className=\"card-grid\">\r\n                {images.map((image) => {\r\n                    return <GifGridItem key={image.id} {...image} />;\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((imgs) =>\r\n            setstate({\r\n                data: imgs,\r\n                loading: false,\r\n            })\r\n        );\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <ol>\r\n                {categories.map((category) => (\r\n                    <GifGrid key={category} category={category} />\r\n                ))}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}